/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EasyAToken,
  EasyATokenInterface,
} from "../../contracts/EasyAToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600a81526020017f4561737941546f6b656e0000000000000000000000000000000000000000000081525081600390816200008f919062000324565b508060049081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b611035806200041b6000396000f3fe6080604052600436106100915760003560e01c806370a082311161005957806370a082311461019157806395d89b41146101ce578063a6f2ae3a146101f9578063a9059cbb14610203578063dd62ed3e1461024057610091565b806306fdde0314610096578063095ea7b3146100c157806318160ddd146100fe57806323b872dd14610129578063313ce56714610166575b600080fd5b3480156100a257600080fd5b506100ab61027d565b6040516100b89190610bf7565b60405180910390f35b3480156100cd57600080fd5b506100e860048036038101906100e39190610cb2565b61030f565b6040516100f59190610d0d565b60405180910390f35b34801561010a57600080fd5b50610113610332565b6040516101209190610d37565b60405180910390f35b34801561013557600080fd5b50610150600480360381019061014b9190610d52565b61033c565b60405161015d9190610d0d565b60405180910390f35b34801561017257600080fd5b5061017b61036b565b6040516101889190610dc1565b60405180910390f35b34801561019d57600080fd5b506101b860048036038101906101b39190610ddc565b610374565b6040516101c59190610d37565b60405180910390f35b3480156101da57600080fd5b506101e36103bc565b6040516101f09190610bf7565b60405180910390f35b61020161044e565b005b34801561020f57600080fd5b5061022a60048036038101906102259190610cb2565b61049d565b6040516102379190610d0d565b60405180910390f35b34801561024c57600080fd5b5061026760048036038101906102629190610e09565b6104c0565b6040516102749190610d37565b60405180910390f35b60606003805461028c90610e78565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610e78565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b5050505050905090565b60008061031a610547565b905061032781858561054f565b600191505092915050565b6000600254905090565b600080610347610547565b9050610354858285610561565b61035f8585856105f5565b60019150509392505050565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103cb90610e78565b80601f01602080910402602001604051908101604052809291908181526020018280546103f790610e78565b80156104445780601f1061041957610100808354040283529160200191610444565b820191906000526020600020905b81548152906001019060200180831161042757829003601f168201915b5050505050905090565b60003411610491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048890610f1b565b60405180910390fd5b61049b33346106e9565b565b6000806104a8610547565b90506104b58185856105f5565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b61055c838383600161076b565b505050565b600061056d84846104c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146105ef57818110156105df578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016105d693929190610f4a565b60405180910390fd5b6105ee8484848403600061076b565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106675760006040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161065e9190610f81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106d95760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016106d09190610f81565b60405180910390fd5b6106e4838383610942565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361075b5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016107529190610f81565b60405180910390fd5b61076760008383610942565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036107dd5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016107d49190610f81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361084f5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016108469190610f81565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550801561093c578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109339190610d37565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109945780600260008282546109889190610fcb565b92505081905550610a67565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a20578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610a1793929190610f4a565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ab05780600260008282540392505081905550610afd565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b5a9190610d37565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ba1578082015181840152602081019050610b86565b60008484015250505050565b6000601f19601f8301169050919050565b6000610bc982610b67565b610bd38185610b72565b9350610be3818560208601610b83565b610bec81610bad565b840191505092915050565b60006020820190508181036000830152610c118184610bbe565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c4982610c1e565b9050919050565b610c5981610c3e565b8114610c6457600080fd5b50565b600081359050610c7681610c50565b92915050565b6000819050919050565b610c8f81610c7c565b8114610c9a57600080fd5b50565b600081359050610cac81610c86565b92915050565b60008060408385031215610cc957610cc8610c19565b5b6000610cd785828601610c67565b9250506020610ce885828601610c9d565b9150509250929050565b60008115159050919050565b610d0781610cf2565b82525050565b6000602082019050610d226000830184610cfe565b92915050565b610d3181610c7c565b82525050565b6000602082019050610d4c6000830184610d28565b92915050565b600080600060608486031215610d6b57610d6a610c19565b5b6000610d7986828701610c67565b9350506020610d8a86828701610c67565b9250506040610d9b86828701610c9d565b9150509250925092565b600060ff82169050919050565b610dbb81610da5565b82525050565b6000602082019050610dd66000830184610db2565b92915050565b600060208284031215610df257610df1610c19565b5b6000610e0084828501610c67565b91505092915050565b60008060408385031215610e2057610e1f610c19565b5b6000610e2e85828601610c67565b9250506020610e3f85828601610c67565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e9057607f821691505b602082108103610ea357610ea2610e49565b5b50919050565b7f596f75206d7573742073656e6420736f6d652058525020746f2067657420746f60008201527f6b656e7300000000000000000000000000000000000000000000000000000000602082015250565b6000610f05602483610b72565b9150610f1082610ea9565b604082019050919050565b60006020820190508181036000830152610f3481610ef8565b9050919050565b610f4481610c3e565b82525050565b6000606082019050610f5f6000830186610f3b565b610f6c6020830185610d28565b610f796040830184610d28565b949350505050565b6000602082019050610f966000830184610f3b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610fd682610c7c565b9150610fe183610c7c565b9250828201905080821115610ff957610ff8610f9c565b5b9291505056fea2646970667358221220ed29991dc4a6fccd9a2685366ac1c330238a265258f149cad34a22c8a322753164736f6c63430008180033";

type EasyATokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EasyATokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EasyAToken__factory extends ContractFactory {
  constructor(...args: EasyATokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EasyAToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EasyAToken__factory {
    return super.connect(runner) as EasyAToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EasyATokenInterface {
    return new Interface(_abi) as EasyATokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EasyAToken {
    return new Contract(address, _abi, runner) as unknown as EasyAToken;
  }
}
